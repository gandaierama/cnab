version: "3.7"
services:
  mysql: 
    container_name: mysql
    restart: always
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=bycoders
      - MYSQL_PASSWORD=bycoders
      - MYSQL_DATABASE=cnab
    ports:
    - "3306:3306"
    volumes:
    - mysql_data:/var/lib/mysql
    networks:
      - core_service_network
  redis:
    container_name: redis
    restart: always
    image: redis:6.0-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - core_service_network
  back:
    command: npm start
    container_name: back
    build: ./back
    environment:
      - APP_ENV=development
      - APP_PORT=8080
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=bycoders
      - MYSQL_PASSWORD=bycoders
      - MYSQL_DATABASE=cnab
    volumes: 
        - back:/back/
    working_dir: /var/www/back
    ports:
      - 8080:8080
    networks:
      - core_service_network
  front:
    command: npm start
    container_name: front
    build: ./front
    environment:
      - APP_ENV=development
      - APP_PORT=3000
    volumes: 
        - front:/front/
    working_dir: /var/www/front
    ports:
      - 3000:3000
    networks:
      - core_service_network

  nginx:
    build: ./front/nginx
    container_name: nginx
    ports:
      - 80:80
    networks:
      - core_service_network
networks:
  core_service_network:
    driver: bridge
    name: core_service_network
volumes:
  mysql_data:
    name: mysql_data
  redis_data:
    name: redis_data
  back:
    name: back
  front:
    name: front
  nginx:
    name: nginx